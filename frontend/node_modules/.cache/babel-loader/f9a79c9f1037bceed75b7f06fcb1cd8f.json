{"ast":null,"code":"import { GraphQLClient, gql } from 'graphql-request';\nexport default async function github(query) {\n  const endpoint = 'https://api.github.com/graphql';\n  const graphQLClient = new GraphQLClient(endpoint, {\n    headers: {\n      authorization: 'Bearer MY_TOKEN'\n    }\n  });\n  const data = await graphQLClient.request(gql`${query}`);\n  console.log(JSON.stringify(data, undefined, 2));\n}\nmain().catch(error => console.error(error));\n\nconst {\n  request\n} = require('graphql-request');\n\nconst query = `{\n  Movie(title: \"Inception\") {\n    releaseDate\n    actors {\n      name\n    }\n  }\n}`;\nrequest('https://api.github.com/graphql', query).then(data => console.log(data));","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/apis/github.js"],"names":["GraphQLClient","gql","github","query","endpoint","graphQLClient","headers","authorization","data","request","console","log","JSON","stringify","undefined","main","catch","error","require","then"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,GAAxB,QAAmC,iBAAnC;AAEA,eAAe,eAAeC,MAAf,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,QAAQ,GAAG,gCAAjB;AAEA,QAAMC,aAAa,GAAG,IAAIL,aAAJ,CAAkBI,QAAlB,EAA4B;AAChDE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AADuC,GAA5B,CAAtB;AAMA,QAAMC,IAAI,GAAG,MAAMH,aAAa,CAACI,OAAd,CAAsBR,GAAI,GAAEE,KAAM,EAAlC,CAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqBM,SAArB,EAAgC,CAAhC,CAAZ;AACD;AAEDC,IAAI,GAAGC,KAAP,CAAcC,KAAD,IAAWP,OAAO,CAACO,KAAR,CAAcA,KAAd,CAAxB;;AACA,MAAM;AAAER,EAAAA;AAAF,IAAcS,OAAO,CAAC,iBAAD,CAA3B;;AAEA,MAAMf,KAAK,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,EAPA;AASAM,OAAO,CAAC,gCAAD,EAAmCN,KAAnC,CAAP,CAAiDgB,IAAjD,CAAsDX,IAAI,IAAIE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAA9D","sourcesContent":["import { GraphQLClient, gql } from 'graphql-request'\n\nexport default async function github(query) {\n  const endpoint = 'https://api.github.com/graphql'\n\n  const graphQLClient = new GraphQLClient(endpoint, {\n    headers: {\n      authorization: 'Bearer MY_TOKEN',\n    },\n  })\n\n  const data = await graphQLClient.request(gql`${query}`)\n  console.log(JSON.stringify(data, undefined, 2))\n}\n\nmain().catch((error) => console.error(error))\nconst { request } = require('graphql-request')\n\nconst query = `{\n  Movie(title: \"Inception\") {\n    releaseDate\n    actors {\n      name\n    }\n  }\n}`\n  \nrequest('https://api.github.com/graphql', query).then(data => console.log(data))"]},"metadata":{},"sourceType":"module"}