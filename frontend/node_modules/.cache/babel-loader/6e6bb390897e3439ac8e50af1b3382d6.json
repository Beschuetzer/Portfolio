{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport repositoriesReducer from './repositoriesReducer';\nimport clickSkillReducer from './clickSkillReducer';\nimport { ADD_REPO } from \"../actions/types\"; //Reducers accept an \"Action Creator Function\" as last arg\n//const selectedSongReducer = (selectedSong = null, action) => {\n//    if (action.type === \"SONG_SELECTED\") return action.payload;\n//    else return selectedSong;\n//}\n\nconst reposToDisplayReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_REPO:\n      return [...state, at];\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  repos: repositoriesReducer,\n  clickedSkill: clickSkillReducer,\n  reposToDisplay: reposToDisplayReducer\n});","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/reducers/index.js"],"names":["combineReducers","repositoriesReducer","clickSkillReducer","ADD_REPO","reposToDisplayReducer","state","action","type","at","repos","clickedSkill","reposToDisplay"],"mappings":"AACA,SAAQA,eAAR,QAA8B,OAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SACIC,QADJ,QAEO,kBAFP,C,CAIA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,QAAL;AACI,aAAO,CAAC,GAAGE,KAAJ,EAAWG,EAAX,CAAP;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPD;;AASA,eAAeL,eAAe,CAAC;AAC3BS,EAAAA,KAAK,EAAER,mBADoB;AAE3BS,EAAAA,YAAY,EAAER,iBAFa;AAG3BS,EAAAA,cAAc,EAAEP;AAHW,CAAD,CAA9B","sourcesContent":["\nimport {combineReducers} from \"redux\";\nimport repositoriesReducer from './repositoriesReducer';\nimport clickSkillReducer from './clickSkillReducer';\nimport { \n    ADD_REPO,\n} from \"../actions/types\";\n\n//Reducers accept an \"Action Creator Function\" as last arg\n//const selectedSongReducer = (selectedSong = null, action) => {\n//    if (action.type === \"SONG_SELECTED\") return action.payload;\n//    else return selectedSong;\n//}\n\nconst reposToDisplayReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_REPO:\n            return [...state, at]\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    repos: repositoriesReducer,\n    clickedSkill: clickSkillReducer,\n    reposToDisplay: reposToDisplayReducer,\n})\n\n\n\n    \n"]},"metadata":{},"sourceType":"module"}