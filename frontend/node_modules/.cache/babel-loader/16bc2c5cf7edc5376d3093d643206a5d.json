{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/navbar/PageNav.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setPreviousUrl } from '../../actions';\nimport { capitalize } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PageNav extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSections = () => {\n      var _this$props$match;\n\n      console.log('render------------------------------------------------');\n      const {\n        previousUrl\n      } = this.props;\n      const currentUrl = (_this$props$match = this.props.match) === null || _this$props$match === void 0 ? void 0 : _this$props$match.url; // if (previousUrl === currentUrl) return;\n\n      if (!previousUrl) this.props.setPreviousUrl(currentUrl);\n      let sectionNames = [];\n      const sections = document.querySelectorAll('[data-section]');\n\n      for (let i = 0; i < sections.length; i++) {\n        const section = sections[i];\n        const capitalized = capitalize(section.dataset.section);\n        sectionNames.push(capitalized === null || capitalized === void 0 ? void 0 : capitalized.replace('-', ' '));\n      }\n\n      return sectionNames.map((sectionName, index, array) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${PageNav.cssClass}__section ${PageNav.cssClass}__section-${sectionName}`,\n          children: [sectionName, index < array.length - 1 ? '/' : null]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$match2;\n\n    const {\n      previousUrl\n    } = this.props;\n    const currentUrl = (_this$props$match2 = this.props.match) === null || _this$props$match2 === void 0 ? void 0 : _this$props$match2.url;\n    console.log('previousUrl =', previousUrl);\n  }\n\n  render() {\n    return /*#__PURE__*/ReactDOM.createPortal(\n    /*#__PURE__*/\n    //The idea behind this component is to have a nav element that has quick links  to the sections of each page\n    _jsxDEV(React.Fragment, {\n      children: this.renderSections()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), document.querySelector('.page-nav'));\n  }\n\n}\n\nPageNav.cssClass = 'page-nav';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousUrl: state.general.previousUrl\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPreviousUrl\n})(PageNav);","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/navbar/PageNav.js"],"names":["React","ReactDOM","connect","Link","setPreviousUrl","capitalize","PageNav","Component","renderSections","console","log","previousUrl","props","currentUrl","match","url","sectionNames","sections","document","querySelectorAll","i","length","section","capitalized","dataset","push","replace","map","sectionName","index","array","cssClass","componentDidMount","render","createPortal","querySelector","mapStateToProps","state","ownProps","general"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAUpCC,cAVoC,GAUnB,MAAM;AAAA;;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACA,YAAMC,UAAU,wBAAG,KAAKD,KAAL,CAAWE,KAAd,sDAAG,kBAAkBC,GAArC,CAHqB,CAKrB;;AAEA,UAAI,CAACJ,WAAL,EAAkB,KAAKC,KAAL,CAAWR,cAAX,CAA0BS,UAA1B;AAElB,UAAIG,YAAY,GAAG,EAAnB;AACA,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,CAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,cAAME,OAAO,GAAGL,QAAQ,CAACG,CAAD,CAAxB;AACA,cAAMG,WAAW,GAAGlB,UAAU,CAACiB,OAAO,CAACE,OAAR,CAAgBF,OAAjB,CAA9B;AACAN,QAAAA,YAAY,CAACS,IAAb,CAAkBF,WAAlB,aAAkBA,WAAlB,uBAAkBA,WAAW,CAAEG,OAAb,CAAqB,GAArB,EAA0B,GAA1B,CAAlB;AACD;;AAED,aAAOV,YAAY,CAACW,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,EAAqBC,KAArB,KAA+B;AACrD,4BACE;AAAkB,UAAA,SAAS,EAAG,GAAExB,OAAO,CAACyB,QAAS,aAAYzB,OAAO,CAACyB,QAAS,aAAYH,WAAY,EAAtG;AAAA,qBACGA,WADH,EAEGC,KAAK,GAAIC,KAAK,CAACT,MAAN,GAAe,CAAxB,GACC,GADD,GAGC,IALJ;AAAA,WAAWQ,KAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXM,CAAP;AAYD,KAxCmC;AAAA;;AAGpCG,EAAAA,iBAAiB,GAAI;AAAA;;AACnB,UAAM;AAAErB,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AACA,UAAMC,UAAU,yBAAG,KAAKD,KAAL,CAAWE,KAAd,uDAAG,mBAAkBC,GAArC;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,WAA7B;AACD;;AAkCDsB,EAAAA,MAAM,GAAG;AACP,wBACEhC,QAAQ,CAACiC,YAAT;AAAA;AACE;AACA,YAAC,KAAD,CAAO,QAAP;AAAA,gBACG,KAAK1B,cAAL;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAMEU,QAAQ,CAACiB,aAAT,CAAuB,WAAvB,CANF,CADF;AAUD;;AArDmC;;AAAhC7B,O,CACGyB,Q,GAAW,U;;AAuDpB,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACL3B,IAAAA,WAAW,EAAE0B,KAAK,CAACE,OAAN,CAAc5B;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACkC,eAAD,EAAkB;AACtChC,EAAAA;AADsC,CAAlB,CAAP,CAEZE,OAFY,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { setPreviousUrl } from '../../actions';\nimport { capitalize } from '../../helpers';\n\nclass PageNav extends React.Component {\n  static cssClass = 'page-nav';\n\n  componentDidMount () {\n    const { previousUrl } = this.props;\n    const currentUrl = this.props.match?.url;\n    \n    console.log('previousUrl =', previousUrl);\n  }\n\n  renderSections = () => {\n    console.log('render------------------------------------------------');\n    const { previousUrl } = this.props;\n    const currentUrl = this.props.match?.url;\n\n    // if (previousUrl === currentUrl) return;\n\n    if (!previousUrl) this.props.setPreviousUrl(currentUrl);\n\n    let sectionNames = [];\n    const sections = document.querySelectorAll('[data-section]');\n\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const capitalized = capitalize(section.dataset.section);\n      sectionNames.push(capitalized?.replace('-', ' '))\n    }\n    \n    return sectionNames.map((sectionName, index, array) => {\n      return (\n        <span key={index} className={`${PageNav.cssClass}__section ${PageNav.cssClass}__section-${sectionName}`}>\n          {sectionName}\n          {index < (array.length - 1) ?\n            '/'  \n          : \n            null\n          }\n        </span>\n      );\n    });\n  }\n\n  render() {\n    return (\n      ReactDOM.createPortal(\n        //The idea behind this component is to have a nav element that has quick links  to the sections of each page\n        <React.Fragment>\n          {this.renderSections()}\n        </React.Fragment>\n      ,\n        document.querySelector('.page-nav')\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { \n    previousUrl: state.general.previousUrl\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setPreviousUrl,\n})(PageNav);"]},"metadata":{},"sourceType":"module"}