{"ast":null,"code":"import github from '../apis/github';\nimport { GET_REPOSITORIES } from './types'; //Example Action Creator\n//export const selectSong = (song) => {\n//    return {\n//        type: \"SONG_SELECTED\",\n//        payload: song,\n//    }\n//}\n\nexport const getRepositories = () => async (dispatch, getStore) => {\n  const introspection = `\n    query {\n      __type(name: \"Repository\") {\n        name\n        kind\n        description\n        fields {\n          name\n        }\n      }\n    }\n  `;\n  const query = `query {\n    repositories(first:50) {\n      nodes {\n        createdAt\n        description\n        name\n        updatedAt\n        \"repositoryTopics\n      }\n    }\n  }`;\n  const response = await github(introspection);\n  console.log('response =', response);\n  dispatch({\n    type: GET_REPOSITORIES,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/actions/index.js"],"names":["github","GET_REPOSITORIES","getRepositories","dispatch","getStore","introspection","query","response","console","log","type","payload","data"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SACEC,gBADF,QAEO,SAFP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,QAAMC,aAAa,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXE;AAYA,QAAMC,KAAK,GACV;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAXE;AAaA,QAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACK,aAAD,CAA7B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AAEAJ,EAAAA,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAET,gBADC;AAEPU,IAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFX,GAAD,CAAR;AAID,CAjCM","sourcesContent":["import github from '../apis/github';\nimport {\n  GET_REPOSITORIES,\n} from './types';\n//Example Action Creator\n//export const selectSong = (song) => {\n//    return {\n//        type: \"SONG_SELECTED\",\n//        payload: song,\n//    }\n//}\n    \nexport const getRepositories = () => async (dispatch, getStore) => {\n  const introspection = `\n    query {\n      __type(name: \"Repository\") {\n        name\n        kind\n        description\n        fields {\n          name\n        }\n      }\n    }\n  `\n  const query = \n  `query {\n    repositories(first:50) {\n      nodes {\n        createdAt\n        description\n        name\n        updatedAt\n        \"repositoryTopics\n      }\n    }\n  }`\n\n  const response = await github(introspection);\n  console.log('response =', response);\n\n  dispatch({\n    type: GET_REPOSITORIES,\n    payload: response.data,\n  });\n}"]},"metadata":{},"sourceType":"module"}