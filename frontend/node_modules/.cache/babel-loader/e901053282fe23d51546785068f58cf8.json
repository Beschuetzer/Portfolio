{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/pages/resume/ReferenceItem.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReferenceItem = ({\n  name,\n  phone,\n  email,\n  relation,\n  href\n}) => {\n  const relationWords = relation.split(' ');\n  const relationIsMultipleWords = relationWords.length > 1;\n  const relationMiddleIndex = Math.ceil(relationWords.length / 2);\n  const proposedRelationTopRowOne = relationWords.slice(0, relationMiddleIndex).join(' ');\n  const proposedRelationBottomRowOne = relationWords.slice(relationMiddleIndex).join(' ');\n  const differenceInCharacterLengthOne = Math.abs(proposedRelationTopRowOne - proposedRelationBottomRowOne).length;\n  const proposedRelationTopRowTwo = relationWords.slice(0, relationMiddleIndex).join(' ');\n  const proposedRelationBottomRowTwo = relationWords.slice(relationMiddleIndex).join(' ');\n  const differenceInCharacterLengthTwo = Math.abs(proposedRelationTopRowTwo - proposedRelationBottomRowTwo).length;\n  let topRowToUse = proposedRelationTopRowOne;\n  let bottomRowToUse = proposedRelationBottomRowOne;\n  if (differenceInCharacterLengthOne) //compare the two different arrangements and use the one with the smaller character length difference\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [href ? /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        href: href,\n        className: \"references__name--link\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"references__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), relationIsMultipleWords ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"references__relation-words\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"references__relation-word-one\",\n          children: topRowToUse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"references__relation-word-rest\",\n          children: bottomRowToUse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"references__relation\",\n        children: relation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"references__phone\",\n        children: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"references__email\",\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n};\n\n_c = ReferenceItem;\nexport default ReferenceItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReferenceItem\");","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/pages/resume/ReferenceItem.js"],"names":["React","ReferenceItem","name","phone","email","relation","href","relationWords","split","relationIsMultipleWords","length","relationMiddleIndex","Math","ceil","proposedRelationTopRowOne","slice","join","proposedRelationBottomRowOne","differenceInCharacterLengthOne","abs","proposedRelationTopRowTwo","proposedRelationBottomRowTwo","differenceInCharacterLengthTwo","topRowToUse","bottomRowToUse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAAD,KAA0C;AAE9D,QAAMC,aAAa,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAtB;AACA,QAAMC,uBAAuB,GAAGF,aAAa,CAACG,MAAd,GAAuB,CAAvD;AACA,QAAMC,mBAAmB,GAAGC,IAAI,CAACC,IAAL,CAAUN,aAAa,CAACG,MAAd,GAAuB,CAAjC,CAA5B;AAEA,QAAMI,yBAAyB,GAAGP,aAAa,CAACQ,KAAd,CAAoB,CAApB,EAAwBJ,mBAAxB,EAA8CK,IAA9C,CAAmD,GAAnD,CAAlC;AACA,QAAMC,4BAA4B,GAAGV,aAAa,CAACQ,KAAd,CAAoBJ,mBAApB,EAAyCK,IAAzC,CAA8C,GAA9C,CAArC;AACA,QAAME,8BAA8B,GAAGN,IAAI,CAACO,GAAL,CAASL,yBAAyB,GAAGG,4BAArC,EAAmEP,MAA1G;AAEA,QAAMU,yBAAyB,GAAGb,aAAa,CAACQ,KAAd,CAAoB,CAApB,EAAwBJ,mBAAxB,EAA8CK,IAA9C,CAAmD,GAAnD,CAAlC;AACA,QAAMK,4BAA4B,GAAGd,aAAa,CAACQ,KAAd,CAAoBJ,mBAApB,EAAyCK,IAAzC,CAA8C,GAA9C,CAArC;AACA,QAAMM,8BAA8B,GAAGV,IAAI,CAACO,GAAL,CAASC,yBAAyB,GAAGC,4BAArC,EAAmEX,MAA1G;AAEA,MAAIa,WAAW,GAAGT,yBAAlB;AACA,MAAIU,cAAc,GAAGP,4BAArB;AAEA,MAAIC,8BAAJ,EAEA;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,iBACGZ,IAAI,gBACH;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,YAAvB;AAAoC,QAAA,IAAI,EAAEA,IAA1C;AAAgD,QAAA,SAAS,EAAC,wBAA1D;AAAA,kBAAoFJ;AAApF;AAAA;AAAA;AAAA;AAAA,cADG,gBAGH;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMGO,uBAAuB,gBAEtB;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,oBAAgDc;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,oBAAiDC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFsB,gBAOtB;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA,kBAAwCnB;AAAxC;AAAA;AAAA;AAAA;AAAA,cAbJ,eAeE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,kBAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,kBAAqCC;AAArC;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,CAzCD;;KAAMH,a;AA2CN,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nconst ReferenceItem = ({name, phone, email, relation, href}) => {\n\n  const relationWords = relation.split(' ');\n  const relationIsMultipleWords = relationWords.length > 1;\n  const relationMiddleIndex = Math.ceil(relationWords.length / 2);\n\n  const proposedRelationTopRowOne = relationWords.slice(0, (relationMiddleIndex)).join(' ')\n  const proposedRelationBottomRowOne = relationWords.slice(relationMiddleIndex).join(' ')\n  const differenceInCharacterLengthOne = Math.abs(proposedRelationTopRowOne - proposedRelationBottomRowOne).length;\n\n  const proposedRelationTopRowTwo = relationWords.slice(0, (relationMiddleIndex)).join(' ')\n  const proposedRelationBottomRowTwo = relationWords.slice(relationMiddleIndex).join(' ')\n  const differenceInCharacterLengthTwo = Math.abs(proposedRelationTopRowTwo - proposedRelationBottomRowTwo).length;\n\n  let topRowToUse = proposedRelationTopRowOne;\n  let bottomRowToUse = proposedRelationBottomRowOne;\n\n  if (differenceInCharacterLengthOne)\n\n  //compare the two different arrangements and use the one with the smaller character length difference\n\n  return (\n    <React.Fragment>\n      {href ?\n        <a target=\"_blank\" rel='noreferrer' href={href} className='references__name--link'>{name}</a>\n      :\n        <span className='references__name'>{name}</span>\n      }\n      {relationIsMultipleWords ?\n        \n        <div className='references__relation-words'>\n          <div className='references__relation-word-one'>{topRowToUse}</div>\n          <div className='references__relation-word-rest'>{bottomRowToUse}</div>\n        </div>\n      : \n        <span className='references__relation'>{relation}</span>\n      }\n      <span className='references__phone'>{phone}</span>\n      <span className='references__email'>{email}</span>\n    </React.Fragment>\n  );\n}\n\nexport default ReferenceItem;"]},"metadata":{},"sourceType":"module"}