{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/SkillsPopup.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { checkForParentOfType } from '../helpers';\nimport { clickSkill } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SkillsPopup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.relevantProjects = [];\n    this.skillsPopupDiv = document.querySelector('#skillsPopup');\n\n    this.onCloseClick = e => {\n      var _this$skillsPopupDiv, _this$skillsPopupDiv$;\n\n      (_this$skillsPopupDiv = this.skillsPopupDiv) === null || _this$skillsPopupDiv === void 0 ? void 0 : (_this$skillsPopupDiv$ = _this$skillsPopupDiv.classList) === null || _this$skillsPopupDiv$ === void 0 ? void 0 : _this$skillsPopupDiv$.remove('skills-popup--active');\n      clickSkill(null);\n      console.log('after click------------------------------------------------');\n    };\n\n    this.renderProjects = skill => {//TODO: calculate the projects but first need to run calculations after fetching in async action creator\n    };\n\n    this.renderTableHeaders = () => {//TODO\n    };\n  }\n\n  componentDidMount() {\n    //TODO: Filter\n    // nodes {\n    //   createdAt: \"2020-06-16T05:21:24Z\"\n    //   description: \"This was a module in The Odin Project.\"\n    //   homepageUrl: \"\"\n    //   name: \"git_test\"\n    //   repositoryTopics: {nodes: [{topic: {name: \"git\"}}]}\n    //   nodes: [{topic: {name: \"git\"}}]\n    //   0: {topic: {name: \"git\"}}\n    //   updatedAt: \"2021-03-15T18:03:40Z\"\n    //   url: \"https://github.com/Beschuetzer/git_test\"\n    // }\n    // this.relevantProjects = this.props.projects.filter(project => project.)\n    const handleClickBody = e => {\n      e.stopPropagation();\n      const isBodyClick = !checkForParentOfType(e.target, 'div', 'skills-popup');\n\n      if (isBodyClick) {\n        var _this$skillsPopupDiv2, _this$skillsPopupDiv3;\n\n        (_this$skillsPopupDiv2 = this.skillsPopupDiv) === null || _this$skillsPopupDiv2 === void 0 ? void 0 : (_this$skillsPopupDiv3 = _this$skillsPopupDiv2.classList) === null || _this$skillsPopupDiv3 === void 0 ? void 0 : _this$skillsPopupDiv3.remove('skills-popup--active');\n        thuisclickSkill(null);\n        console.log('after click------------------------------------------------');\n      }\n    };\n\n    this.skillsPopupDiv.addEventListener('click', handleClickBody);\n  }\n\n  render() {\n    const {\n      skill\n    } = this.props;\n    return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-popup__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: this.onCloseClick,\n        className: \"skills-popup__close\",\n        children: /*#__PURE__*/_jsxDEV(\"use\", {\n          xlinkHref: \"/sprite.svg#icon-close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-popup__header\",\n        children: [\"'\", skill, \"' Projects:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-popup__table\",\n        children: [this.renderTableHeaders(), this.renderProjects(skill)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), document.querySelector('#skillsPopup'));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clickSkill\n})(SkillsPopup);","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/SkillsPopup.js"],"names":["React","ReactDOM","connect","checkForParentOfType","clickSkill","SkillsPopup","Component","relevantProjects","skillsPopupDiv","document","querySelector","onCloseClick","e","classList","remove","console","log","renderProjects","skill","renderTableHeaders","componentDidMount","handleClickBody","stopPropagation","isBodyClick","target","thuisclickSkill","addEventListener","render","props","createPortal","mapStateToProps","state","ownProps","projects"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,YAArC;AACA,SAASC,UAAT,QAA2B,YAA3B;;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,gBADwC,GACrB,EADqB;AAAA,SAExCC,cAFwC,GAEvBC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAFuB;;AAAA,SAkCxCC,YAlCwC,GAkCxBC,CAAD,IAAO;AAAA;;AACpB,mCAAKJ,cAAL,uGAAqBK,SAArB,gFAAgCC,MAAhC,CAAuC,sBAAvC;AACAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AAED,KAvCuC;;AAAA,SAyCxCC,cAzCwC,GAyCtBC,KAAD,IAAW,CAC1B;AACD,KA3CuC;;AAAA,SA6CxCC,kBA7CwC,GA6CnB,MAAM,CACzB;AACD,KA/CuC;AAAA;;AAIxCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,UAAMC,eAAe,GAAIT,CAAD,IAAO;AAC7BA,MAAAA,CAAC,CAACU,eAAF;AACA,YAAMC,WAAW,GAAG,CAACpB,oBAAoB,CAACS,CAAC,CAACY,MAAH,EAAW,KAAX,EAAkB,cAAlB,CAAzC;;AACA,UAAID,WAAJ,EAAiB;AAAA;;AACf,sCAAKf,cAAL,yGAAqBK,SAArB,gFAAgCC,MAAhC,CAAuC,sBAAvC;AACAW,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AACD;AACF,KARD;;AAUA,SAAKR,cAAL,CAAoBkB,gBAApB,CAAqC,OAArC,EAA8CL,eAA9C;AACD;;AAiBDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKU,KAAvB;AACA,wBACE3B,QAAQ,CAAC4B,YAAT,eACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AAAK,QAAA,OAAO,EAAE,KAAKlB,YAAnB;AAAiC,QAAA,SAAS,EAAC,qBAA3C;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,wBAAwCO,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,mBACG,KAAKC,kBAAL,EADH,EAEG,KAAKF,cAAL,CAAoBC,KAApB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYET,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAZF,CADF;AAgBD;;AAnEuC;;AAsE1C,MAAMoB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AADX,GAAP;AAGD,CAJD;;AAMA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkB;AACtC1B,EAAAA;AADsC,CAAlB,CAAP,CAEZC,WAFY,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { checkForParentOfType } from '../helpers';\nimport { clickSkill } from '../actions';\n\nclass SkillsPopup extends React.Component {\n  relevantProjects = []\n  skillsPopupDiv = document.querySelector('#skillsPopup');\n\n  componentDidMount() {\n    //TODO: Filter\n    // nodes {\n    //   createdAt: \"2020-06-16T05:21:24Z\"\n    //   description: \"This was a module in The Odin Project.\"\n    //   homepageUrl: \"\"\n    //   name: \"git_test\"\n    //   repositoryTopics: {nodes: [{topic: {name: \"git\"}}]}\n    //   nodes: [{topic: {name: \"git\"}}]\n    //   0: {topic: {name: \"git\"}}\n    //   updatedAt: \"2021-03-15T18:03:40Z\"\n    //   url: \"https://github.com/Beschuetzer/git_test\"\n    // }\n\n\n    // this.relevantProjects = this.props.projects.filter(project => project.)\n\n    const handleClickBody = (e) => {\n      e.stopPropagation();\n      const isBodyClick = !checkForParentOfType(e.target, 'div', 'skills-popup');\n      if (isBodyClick) {\n        this.skillsPopupDiv?.classList?.remove('skills-popup--active');\n        thuisclickSkill(null);\n        console.log('after click------------------------------------------------');\n      }\n    }\n\n    this.skillsPopupDiv.addEventListener('click', handleClickBody);\n  }\n\n  onCloseClick = (e) => {\n    this.skillsPopupDiv?.classList?.remove('skills-popup--active');\n    clickSkill(null);\n    console.log('after click------------------------------------------------');\n\n  }\n\n  renderProjects = (skill) => {\n    //TODO: calculate the projects but first need to run calculations after fetching in async action creator\n  }\n\n  renderTableHeaders = () => {\n    //TODO\n  }\n  \n  render() {\n    const { skill } = this.props;\n    return (\n      ReactDOM.createPortal(\n        <div className='skills-popup__content'>\n          <svg onClick={this.onCloseClick} className='skills-popup__close'>\n            <use xlinkHref=\"/sprite.svg#icon-close\"></use>\n          </svg>\n          <div className='skills-popup__header'>'{skill}' Projects:</div>\n          <div className='skills-popup__table'>\n            {this.renderTableHeaders()}\n            {this.renderProjects(skill)}\n          </div>\n        </div>\n        ,\n        document.querySelector('#skillsPopup')\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  clickSkill,\n})(SkillsPopup);"]},"metadata":{},"sourceType":"module"}