{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/pages/resume/ReferenceItem.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReferenceItem = ({\n  number,\n  name,\n  phone,\n  email,\n  relation,\n  href\n}) => {\n  const relationWords = relation.split(' ');\n  const relationIsMultipleWords = false; // const relationIsMultipleWords = relationWords.length > 1;\n  // const relationMiddleIndex = Math.ceil(relationWords.length / 2);\n  // const proposedRelationTopRowOne = relationWords.slice(0, (relationMiddleIndex)).join(' ')\n  // const proposedRelationBottomRowOne = relationWords.slice(relationMiddleIndex).join(' ')\n  // const differenceInCharacterLengthOne = Math.abs(proposedRelationTopRowOne - proposedRelationBottomRowOne).length;\n  // const proposedRelationTopRowTwo = relationWords.slice(0, (relationMiddleIndex)).join(' ')\n  // const proposedRelationBottomRowTwo = relationWords.slice(relationMiddleIndex).join(' ')\n  // const differenceInCharacterLengthTwo = Math.abs(proposedRelationTopRowTwo - proposedRelationBottomRowTwo).length;\n  // let topRowToUse = proposedRelationTopRowOne;\n  // let bottomRowToUse = proposedRelationBottomRowOne;\n  // if (differenceInCharacterLengthOne > differenceInCharacterLengthTwo) {\n  //   topRowToUse = proposedRelationTopRowOne;\n  //   bottomRowToUse = proposedRelationBottomRowOne;\n  // }\n  //TODO: test this component with different length relations\n  //compare the two different arrangements and use the one with the smaller character length difference\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"references__number\",\n      children: [number, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), href ? /*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      href: href,\n      className: \"references__name references__name--link\",\n      children: [name, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"references__name\",\n      children: [name, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), relationIsMultipleWords ? null // <div className='references__relation-words'>\n    //   <div className='references__relation-word-one'>{topRowToUse}</div>\n    //   <div className='references__relation-word-rest'>{bottomRowToUse}</div>\n    // </div>\n    :\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"references__relation\",\n      children: relation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"references__phone\",\n      children: phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"references__email\",\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ReferenceItem;\nexport default ReferenceItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReferenceItem\");","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/pages/resume/ReferenceItem.js"],"names":["React","ReferenceItem","number","name","phone","email","relation","href","relationWords","split","relationIsMultipleWords"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA;AAAvC,CAAD,KAAkD;AAEtE,QAAMC,aAAa,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAtB;AACA,QAAMC,uBAAuB,GAAG,KAAhC,CAHsE,CAItE;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BAGE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA,iBAAsCR,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGK,IAAI,gBACH;AAAG,MAAA,MAAM,EAAC,QAAV;AAAmB,MAAA,GAAG,EAAC,YAAvB;AAAoC,MAAA,IAAI,EAAEA,IAA1C;AAAgD,MAAA,SAAS,EAAC,yCAA1D;AAAA,iBACGJ,IADH;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAKH;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBAAmCA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAWGO,uBAAuB,GACtB,IADsB,CAEtB;AACA;AACA;AACA;AALsB;AAAA;AAOtB;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBAAuCJ;AAAvC;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAoBE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCF;AAApC;AAAA;AAAA;AAAA;AAAA,YApBF,eAqBE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCC;AAApC;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CApDD;;KAAMJ,a;AAsDN,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nconst ReferenceItem = ({number, name, phone, email, relation, href}) => {\n\n  const relationWords = relation.split(' ');\n  const relationIsMultipleWords = false;\n  // const relationIsMultipleWords = relationWords.length > 1;\n  // const relationMiddleIndex = Math.ceil(relationWords.length / 2);\n\n  // const proposedRelationTopRowOne = relationWords.slice(0, (relationMiddleIndex)).join(' ')\n  // const proposedRelationBottomRowOne = relationWords.slice(relationMiddleIndex).join(' ')\n  // const differenceInCharacterLengthOne = Math.abs(proposedRelationTopRowOne - proposedRelationBottomRowOne).length;\n\n  // const proposedRelationTopRowTwo = relationWords.slice(0, (relationMiddleIndex)).join(' ')\n  // const proposedRelationBottomRowTwo = relationWords.slice(relationMiddleIndex).join(' ')\n  // const differenceInCharacterLengthTwo = Math.abs(proposedRelationTopRowTwo - proposedRelationBottomRowTwo).length;\n\n  // let topRowToUse = proposedRelationTopRowOne;\n  // let bottomRowToUse = proposedRelationBottomRowOne;\n\n  // if (differenceInCharacterLengthOne > differenceInCharacterLengthTwo) {\n  //   topRowToUse = proposedRelationTopRowOne;\n  //   bottomRowToUse = proposedRelationBottomRowOne;\n  // }\n\n  //TODO: test this component with different length relations\n\n  //compare the two different arrangements and use the one with the smaller character length difference\n\n  return (\n    <React.Fragment>\n      \n        \n      <span className='references__number'>{number}.</span>\n      {href ?\n        <a target=\"_blank\" rel='noreferrer' href={href} className='references__name references__name--link'>\n          {name}:\n        </a>\n      :\n        <div className='references__name'>{name}:</div>\n      }\n      {relationIsMultipleWords ?\n        null\n        // <div className='references__relation-words'>\n        //   <div className='references__relation-word-one'>{topRowToUse}</div>\n        //   <div className='references__relation-word-rest'>{bottomRowToUse}</div>\n        // </div>\n      : \n        <div className='references__relation'>{relation}</div>\n      }\n      <div className='references__phone'>{phone}</div>\n      <div className='references__email'>{email}</div>\n    </React.Fragment>\n  );\n}\n\nexport default ReferenceItem;"]},"metadata":{},"sourceType":"module"}