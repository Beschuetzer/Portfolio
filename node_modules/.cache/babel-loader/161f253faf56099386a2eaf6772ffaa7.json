{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/SkillsPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { checkForParentOfType } from '../helpers';\nimport { clickSkill, addRepoToReposToDisplay } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SkillsPopup = ({\n  reposToDisplay,\n  repos,\n  clickedSkill,\n  addRepoToReposToDisplay,\n  clickSkill\n}) => {\n  _s();\n\n  const skillsPopupDiv = document.querySelector('#skillsPopup'); //on initial load\n\n  useEffect(() => {\n    const handleClickBody = e => {\n      e.stopPropagation();\n      const isBodyClick = !checkForParentOfType(e.target, 'div', 'skills-popup');\n\n      if (isBodyClick) {\n        var _skillsPopupDiv$class;\n\n        skillsPopupDiv === null || skillsPopupDiv === void 0 ? void 0 : (_skillsPopupDiv$class = skillsPopupDiv.classList) === null || _skillsPopupDiv$class === void 0 ? void 0 : _skillsPopupDiv$class.remove('skills-popup--active');\n        clickSkill(null);\n        addRepoToReposToDisplay([]);\n      }\n    };\n\n    skillsPopupDiv.addEventListener('click', handleClickBody);\n  }, [clickSkill, skillsPopupDiv, addRepoToReposToDisplay]); //when clickedSkillUpdate\n\n  useEffect(() => {\n    for (let i = 0; i < repos.length; i++) {\n      const repo = repos[i];\n\n      for (let j = 0; j < ((_repo$repositoryTopic = repo.repositoryTopics.nodes) === null || _repo$repositoryTopic === void 0 ? void 0 : _repo$repositoryTopic.length); j++) {\n        var _repo$repositoryTopic, _node$topic;\n\n        const node = repo.repositoryTopics.nodes[j];\n\n        if (clickedSkill && (node === null || node === void 0 ? void 0 : (_node$topic = node.topic) === null || _node$topic === void 0 ? void 0 : _node$topic.name) === clickedSkill) {\n          addRepoToReposToDisplay(repos[i]);\n          break;\n        }\n      }\n    }\n  }, [clickedSkill, repos, addRepoToReposToDisplay]);\n\n  const onCloseClick = e => {\n    var _skillsPopupDiv$class2;\n\n    skillsPopupDiv === null || skillsPopupDiv === void 0 ? void 0 : (_skillsPopupDiv$class2 = skillsPopupDiv.classList) === null || _skillsPopupDiv$class2 === void 0 ? void 0 : _skillsPopupDiv$class2.remove('skills-popup--active');\n    clickSkill(null);\n  };\n\n  const renderProjects = () => {\n    //TODO: calculate the projects but first need to run calculations after fetching in async action creator\n    // createdAt(pin):\"2020-06-24T17:39:45Z\"\n    // description(pin):\"This was a project that I completed for The Odin Project. My first time using Javascript along with HTML5 and CSS3\"\n    // name(pin):\"PaperRockScissors\"\n    // updatedAt(pin):\"2021-03-15T18:11:05Z\"\n    // homepageUrl(pin):\"https://beschuetzer.github.io/PaperRockScissors/\"\n    // url(pin):\"https://github.com/Beschuetzer/PaperRockScissors\"\n    console.log('reposToDisplay =', reposToDisplay);\n    const keys = [\"name\", 'description', 'createdAt', ' updatedAt', 'url'];\n    return reposToDisplay.map(repo => {\n      return keys.map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `skills-popup__table-item skills-popup__${key}`,\n          children: repo[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      });\n    });\n  };\n\n  const renderTableHeaders = () => {\n    //TODO: name description created updated URL\n    const headers = ['Name', 'Description', 'Created', 'Updated', 'URL'];\n    return headers.map(header => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-popup__table-header\",\n        children: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skills-popup__content\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      onClick: onCloseClick,\n      className: \"skills-popup__close\",\n      children: /*#__PURE__*/_jsxDEV(\"use\", {\n        xlinkHref: \"/sprite.svg#icon-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-popup__header\",\n      children: [\"Projects that use '\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"\",\n        children: [\"$\", clickedSkill]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), \"':\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-popup__table\",\n      children: [renderTableHeaders(), renderProjects()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this), document.querySelector('#skillsPopup'));\n};\n\n_s(SkillsPopup, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = SkillsPopup;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    repos: state.repos,\n    reposToDisplay: state.reposToDisplay,\n    clickedSkill: state.clickedSkill\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clickSkill,\n  addRepoToReposToDisplay\n})(SkillsPopup);\n\nvar _c;\n\n$RefreshReg$(_c, \"SkillsPopup\");","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/SkillsPopup.js"],"names":["React","useEffect","useMemo","ReactDOM","connect","checkForParentOfType","clickSkill","addRepoToReposToDisplay","SkillsPopup","reposToDisplay","repos","clickedSkill","skillsPopupDiv","document","querySelector","handleClickBody","e","stopPropagation","isBodyClick","target","classList","remove","addEventListener","i","length","repo","j","repositoryTopics","nodes","node","topic","name","onCloseClick","renderProjects","console","log","keys","map","key","renderTableHeaders","headers","header","createPortal","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useEffect, useMemo} from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { checkForParentOfType } from '../helpers';\nimport { clickSkill, addRepoToReposToDisplay } from '../actions';\n\nconst SkillsPopup = ({reposToDisplay, repos, clickedSkill, addRepoToReposToDisplay, clickSkill }) => {\n  const skillsPopupDiv = document.querySelector('#skillsPopup');\n\n  //on initial load\n  useEffect(() => {\n    const handleClickBody = (e) => {\n      e.stopPropagation();\n      const isBodyClick = !checkForParentOfType(e.target, 'div', 'skills-popup');\n      if (isBodyClick) {\n        skillsPopupDiv?.classList?.remove('skills-popup--active');\n        clickSkill(null);\n        addRepoToReposToDisplay([]);\n      }\n    }\n    skillsPopupDiv.addEventListener('click', handleClickBody);\n  }, [clickSkill, skillsPopupDiv, addRepoToReposToDisplay]) \n\n  //when clickedSkillUpdate\n  useEffect(() => {\n    for (let i = 0; i < repos.length; i++) {\n      const repo = repos[i];\n      for (let j = 0; j < repo.repositoryTopics.nodes?.length; j++) {\n        const node = repo.repositoryTopics.nodes[j];\n        if (clickedSkill && node?.topic?.name === clickedSkill) {\n          addRepoToReposToDisplay(repos[i]);\n          break;\n        }\n      }\n    }\n\n  }, [clickedSkill, repos, addRepoToReposToDisplay]);\n\n  const onCloseClick = (e) => {\n    skillsPopupDiv?.classList?.remove('skills-popup--active');\n    clickSkill(null);\n  }\n\n  const renderProjects = () => {\n    //TODO: calculate the projects but first need to run calculations after fetching in async action creator\n\n    // createdAt(pin):\"2020-06-24T17:39:45Z\"\n    // description(pin):\"This was a project that I completed for The Odin Project. My first time using Javascript along with HTML5 and CSS3\"\n    // name(pin):\"PaperRockScissors\"\n    // updatedAt(pin):\"2021-03-15T18:11:05Z\"\n    // homepageUrl(pin):\"https://beschuetzer.github.io/PaperRockScissors/\"\n    // url(pin):\"https://github.com/Beschuetzer/PaperRockScissors\"\n    console.log('reposToDisplay =', reposToDisplay);\n    const keys = [\"name\", 'description', 'createdAt', ' updatedAt','url'];\n    return reposToDisplay.map(repo => {\n      return keys.map(key => {\n        return (\n          <div key={key} className={`skills-popup__table-item skills-popup__${key}`}>\n            {repo[key]}\n          </div>\n        );\n      })\n    })\n  }\n\n  const renderTableHeaders = () => {\n    //TODO: name description created updated URL\n    const headers = ['Name', 'Description', 'Created', 'Updated', 'URL'];\n    return headers.map(header => {\n      return (\n        <div className=\"skills-popup__table-header\">{header}</div>\n      );\n    })\n  }\n  \n  return (\n    ReactDOM.createPortal(\n      <div className='skills-popup__content'>\n        <svg onClick={onCloseClick} className='skills-popup__close'>\n          <use xlinkHref=\"/sprite.svg#icon-close\"></use>\n        </svg>\n        <div className='skills-popup__header'>\n          Projects that use '\n          <span className=\"\">${clickedSkill}</span>\n          ':\n        </div>\n        <div className='skills-popup__table'>\n          {renderTableHeaders()}\n          {renderProjects()}\n        </div>\n      </div>\n      ,\n      document.querySelector('#skillsPopup')\n    )\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    repos: state.repos,\n    reposToDisplay: state.reposToDisplay,\n    clickedSkill: state.clickedSkill,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  clickSkill,\n  addRepoToReposToDisplay,\n})(SkillsPopup);\n"]},"metadata":{},"sourceType":"module"}