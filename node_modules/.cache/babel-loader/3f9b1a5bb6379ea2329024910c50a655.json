{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/SkillsPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { checkForParentOfType } from '../helpers';\nimport { clickSkill, addRepoToReposToDisplay } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SkillsPopup = ({\n  clickSkill,\n  skill,\n  repos,\n  clickedSkill,\n  addRepoToReposToDisplay\n}) => {\n  _s();\n\n  const skillsPopupDiv = document.querySelector('#skillsPopup'); //on initial load\n\n  useEffect(() => {\n    const handleClickBody = e => {\n      e.stopPropagation();\n      const isBodyClick = !checkForParentOfType(e.target, 'div', 'skills-popup');\n\n      if (isBodyClick) {\n        var _skillsPopupDiv$class;\n\n        skillsPopupDiv === null || skillsPopupDiv === void 0 ? void 0 : (_skillsPopupDiv$class = skillsPopupDiv.classList) === null || _skillsPopupDiv$class === void 0 ? void 0 : _skillsPopupDiv$class.remove('skills-popup--active');\n        clickSkill(null);\n        addRepoToReposToDisplay([]);\n      }\n    };\n\n    skillsPopupDiv.addEventListener('click', handleClickBody);\n  }, [clickSkill, skillsPopupDiv, addRepoToReposToDisplay]); //when clickedSkillUpdate\n\n  useEffect(() => {\n    for (let i = 0; i < repos.length; i++) {\n      const repo = repos[i];\n\n      for (let j = 0; j < ((_repo$repositoryTopic = repo.repositoryTopics.nodes) === null || _repo$repositoryTopic === void 0 ? void 0 : _repo$repositoryTopic.length); j++) {\n        var _repo$repositoryTopic, _node$topic;\n\n        const node = repo.repositoryTopics.nodes[j];\n\n        if (clickedSkill && (node === null || node === void 0 ? void 0 : (_node$topic = node.topic) === null || _node$topic === void 0 ? void 0 : _node$topic.name) === clickedSkill) {\n          addRepoToReposToDisplay(repos[i]);\n          break;\n        }\n      }\n    }\n  }, [clickedSkill, repos, addRepoToReposToDisplay]);\n\n  const onCloseClick = e => {\n    var _skillsPopupDiv$class2;\n\n    skillsPopupDiv === null || skillsPopupDiv === void 0 ? void 0 : (_skillsPopupDiv$class2 = skillsPopupDiv.classList) === null || _skillsPopupDiv$class2 === void 0 ? void 0 : _skillsPopupDiv$class2.remove('skills-popup--active');\n    clickSkill(null);\n  };\n\n  const renderProjects = skill => {//TODO: calculate the projects but first need to run calculations after fetching in async action creator\n  };\n\n  const renderTableHeaders = () => {//TODO: name description created updated \n  };\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skills-popup__content\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      onClick: onCloseClick,\n      className: \"skills-popup__close\",\n      children: /*#__PURE__*/_jsxDEV(\"use\", {\n        xlinkHref: \"/sprite.svg#icon-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-popup__header\",\n      children: [\"'\", skill, \"' Projects:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-popup__table\",\n      children: [renderTableHeaders(), renderProjects(skill)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this), document.querySelector('#skillsPopup'));\n};\n\n_s(SkillsPopup, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = SkillsPopup;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    repos: state.repos,\n    clickedSkill: state.clickedSkill\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clickSkill,\n  addRepoToReposToDisplay\n})(SkillsPopup); //TODO: Filter\n// nodes {\n//   createdAt: \"2020-06-16T05:21:24Z\"\n//   description: \"This was a module in The Odin Project.\"\n//   homepageUrl: \"\"\n//   name: \"git_test\"\n//   repositoryTopics: {nodes: [{topic: {name: \"git\"}}]}\n//   nodes: [{topic: {name: \"git\"}}]\n//   0: {topic: {name: \"git\"}}\n//   updatedAt: \"2021-03-15T18:03:40Z\"\n//   url: \"https://github.com/Beschuetzer/git_test\"\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"SkillsPopup\");","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/SkillsPopup.js"],"names":["React","useEffect","useMemo","ReactDOM","connect","checkForParentOfType","clickSkill","addRepoToReposToDisplay","SkillsPopup","skill","repos","clickedSkill","skillsPopupDiv","document","querySelector","handleClickBody","e","stopPropagation","isBodyClick","target","classList","remove","addEventListener","i","length","repo","j","repositoryTopics","nodes","node","topic","name","onCloseClick","renderProjects","renderTableHeaders","createPortal","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useEffect, useMemo} from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { checkForParentOfType } from '../helpers';\nimport { clickSkill, addRepoToReposToDisplay } from '../actions';\n\nconst SkillsPopup = ({clickSkill, skill, repos, clickedSkill, addRepoToReposToDisplay }) => {\n  const skillsPopupDiv = document.querySelector('#skillsPopup');\n\n  //on initial load\n  useEffect(() => {\n    const handleClickBody = (e) => {\n      e.stopPropagation();\n      const isBodyClick = !checkForParentOfType(e.target, 'div', 'skills-popup');\n      if (isBodyClick) {\n        skillsPopupDiv?.classList?.remove('skills-popup--active');\n        clickSkill(null);\n        addRepoToReposToDisplay([]);\n      }\n    }\n    skillsPopupDiv.addEventListener('click', handleClickBody);\n  }, [clickSkill, skillsPopupDiv, addRepoToReposToDisplay]) \n\n  //when clickedSkillUpdate\n  useEffect(() => {\n    for (let i = 0; i < repos.length; i++) {\n      const repo = repos[i];\n      for (let j = 0; j < repo.repositoryTopics.nodes?.length; j++) {\n        const node = repo.repositoryTopics.nodes[j];\n        if (clickedSkill && node?.topic?.name === clickedSkill) {\n          addRepoToReposToDisplay(repos[i]);\n          break;\n        }\n      }\n    }\n\n  }, [clickedSkill, repos, addRepoToReposToDisplay]);\n\n  const onCloseClick = (e) => {\n    skillsPopupDiv?.classList?.remove('skills-popup--active');\n    clickSkill(null);\n  }\n\n  const renderProjects = (skill) => {\n    //TODO: calculate the projects but first need to run calculations after fetching in async action creator\n  }\n\n  const renderTableHeaders = () => {\n    //TODO: name description created updated \n  }\n  \n  return (\n    ReactDOM.createPortal(\n      <div className='skills-popup__content'>\n        <svg onClick={onCloseClick} className='skills-popup__close'>\n          <use xlinkHref=\"/sprite.svg#icon-close\"></use>\n        </svg>\n        <div className='skills-popup__header'>'{skill}' Projects:</div>\n        <div className='skills-popup__table'>\n          {renderTableHeaders()}\n          {renderProjects(skill)}\n        </div>\n      </div>\n      ,\n      document.querySelector('#skillsPopup')\n    )\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    repos: state.repos,\n    clickedSkill: state.clickedSkill,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  clickSkill,\n  addRepoToReposToDisplay,\n})(SkillsPopup);\n\n\n//TODO: Filter\n    // nodes {\n    //   createdAt: \"2020-06-16T05:21:24Z\"\n    //   description: \"This was a module in The Odin Project.\"\n    //   homepageUrl: \"\"\n    //   name: \"git_test\"\n    //   repositoryTopics: {nodes: [{topic: {name: \"git\"}}]}\n    //   nodes: [{topic: {name: \"git\"}}]\n    //   0: {topic: {name: \"git\"}}\n    //   updatedAt: \"2021-03-15T18:03:40Z\"\n    //   url: \"https://github.com/Beschuetzer/git_test\"\n    // }"]},"metadata":{},"sourceType":"module"}