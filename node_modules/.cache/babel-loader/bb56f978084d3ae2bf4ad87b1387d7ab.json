{"ast":null,"code":"import github from '../apis/github';\nimport { GET_REPOSITORIES, CLICK_SKILL } from './types'; //Example Action Creator\n//export const selectSong = (song) => {\n//    return {\n//        type: \"SONG_SELECTED\",\n//        payload: song,\n//    }\n//}\n\nexport const getRepositories = () => async (dispatch, getStore) => {\n  const schema = `\n    query {\n      __schema {\n        types {\n          name\n          kind\n          description\n          fields {\n            name\n          }\n        }\n      }\n    }\n  `;\n  const individualObjIntrospection = `\n    query {\n      __type(name: \"Repository\") {\n        name\n        kind\n        description\n        fields {\n          name\n        }\n      }\n    }\n  `;\n  const query = `query {\n    viewer {\n      repositories(first:50) {\n        nodes {\n          createdAt\n          description\n          name\n          updatedAt\n          repositoryTopics(first:50) {\n            nodes {\n              topic {\n                name\n              }\n            }\n          }\n          homepageUrl\n          url\n        }\n      }\n    }\n\n  }`;\n  const response = await github(query);\n  console.log('response =', response);\n  dispatch({\n    type: GET_REPOSITORIES,\n    payload: response.viewer.repositories.nodes\n  });\n}; //Github Graph QL Repository \n// 0: {name: \"assignableUsers\"}\n// 1: {name: \"branchProtectionRules\"}\n// 2: {name: \"codeOfConduct\"}\n// 3: {name: \"collaborators\"}\n// 4: {name: \"commitComments\"}\n// 5: {name: \"contactLinks\"}\n// 6: {name: \"createdAt\"}\n// 7: {name: \"databaseId\"}\n// 8: {name: \"defaultBranchRef\"}\n// 9: {name: \"deleteBranchOnMerge\"}\n// 10: {name: \"deployKeys\"}\n// 11: {name: \"deployments\"}\n// 12: {name: \"description\"}\n// 13: {name: \"descriptionHTML\"}\n// 14: {name: \"diskUsage\"}\n// 15: {name: \"forkCount\"}\n// 16: {name: \"forks\"}\n// 17: {name: \"fundingLinks\"}\n// 18: {name: \"hasIssuesEnabled\"}\n// 19: {name: \"hasProjectsEnabled\"}\n// 20: {name: \"hasWikiEnabled\"}\n// 21: {name: \"homepageUrl\"}\n// 22: {name: \"id\"}\n// 23: {name: \"interactionAbility\"}\n// 24: {name: \"isArchived\"}\n// 25: {name: \"isBlankIssuesEnabled\"}\n// 26: {name: \"isDisabled\"}\n// 27: {name: \"isEmpty\"}\n// 28: {name: \"isFork\"}\n// 29: {name: \"isInOrganization\"}\n// 30: {name: \"isLocked\"}\n// 31: {name: \"isMirror\"}\n// 32: {name: \"isPrivate\"}\n// 33: {name: \"isSecurityPolicyEnabled\"}\n// 34: {name: \"isTemplate\"}\n// 35: {name: \"isUserConfigurationRepository\"}\n// 36: {name: \"issue\"}\n// 37: {name: \"issueOrPullRequest\"}\n// 38: {name: \"issueTemplates\"}\n// 39: {name: \"issues\"}\n// 40: {name: \"label\"}\n// 41: {name: \"labels\"}\n// 42: {name: \"languages\"}\n// 43: {name: \"latestRelease\"}\n// 44: {name: \"licenseInfo\"}\n// 45: {name: \"lockReason\"}\n// 46: {name: \"mentionableUsers\"}\n// 47: {name: \"mergeCommitAllowed\"}\n// 48: {name: \"milestone\"}\n// 49: {name: \"milestones\"}\n// 50: {name: \"mirrorUrl\"}\n// 51: {name: \"name\"}\n// 52: {name: \"nameWithOwner\"}\n// 53: {name: \"object\"}\n// 54: {name: \"openGraphImageUrl\"}\n// 55: {name: \"owner\"}\n// 56: {name: \"packages\"}\n// 57: {name: \"parent\"}\n// 58: {name: \"pinnedIssues\"}\n// 59: {name: \"primaryLanguage\"}\n// 60: {name: \"project\"}\n// 61: {name: \"projects\"}\n// 62: {name: \"projectsResourcePath\"}\n// 63: {name: \"projectsUrl\"}\n// 64: {name: \"pullRequest\"}\n// 65: {name: \"pullRequests\"}\n// 66: {name: \"pushedAt\"}\n// 67: {name: \"rebaseMergeAllowed\"}\n// 68: {name: \"ref\"}\n// 69: {name: \"refs\"}\n// 70: {name: \"release\"}\n// 71: {name: \"releases\"}\n// 72: {name: \"repositoryTopics\"}\n// 73: {name: \"resourcePath\"}\n// 74: {name: \"securityPolicyUrl\"}\n// 75: {name: \"shortDescriptionHTML\"}\n// 76: {name: \"squashMergeAllowed\"}\n// 77: {name: \"sshUrl\"}\n// 78: {name: \"stargazerCount\"}\n// 79: {name: \"stargazers\"}\n// 80: {name: \"submodules\"}\n// 81: {name: \"tempCloneToken\"}\n// 82: {name: \"templateRepository\"}\n// 83: {name: \"updatedAt\"}\n// 84: {name: \"url\"}\n// 85: {name: \"usesCustomOpenGraphImage\"}\n// 86: {name: \"viewerCanAdminister\"}\n// 87: {name: \"viewerCanCreateProjects\"}\n// 88: {name: \"viewerCanSubscribe\"}\n// 89: {name: \"viewerCanUpdateTopics\"}\n// 90: {name: \"viewerDefaultCommitEmail\"}\n// 91: {name: \"viewerDefaultMergeMethod\"}\n// 92: {name: \"viewerHasStarred\"}\n// 93: {name: \"viewerPermission\"}\n// 94: {name: \"viewerPossibleCommitEmails\"}\n// 95: {name: \"viewerSubscription\"}\n// 96: {name: \"vulnerabilityAlerts\"}\n// 97: {name: \"watchers\"}\n\nexport const clickSkill = target => {\n  console.log('target =', target.textContent.replace(':', ''));\n  return {\n    type: CLICK_SKILL,\n    payload: target\n  };\n};","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/actions/index.js"],"names":["github","GET_REPOSITORIES","CLICK_SKILL","getRepositories","dispatch","getStore","schema","individualObjIntrospection","query","response","console","log","type","payload","viewer","repositories","nodes","clickSkill","target","textContent","replace"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SACEC,gBADF,EAEEC,WAFF,QAGO,SAHP,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,QAAMC,MAAM,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAbE;AAeA,QAAMC,0BAA0B,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXE;AAaA,QAAMC,KAAK,GACV;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAtBE;AAwBA,QAAMC,QAAQ,GAAG,MAAMT,MAAM,CAACQ,KAAD,CAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AAEAL,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEX,gBADC;AAEPY,IAAAA,OAAO,EAAEJ,QAAQ,CAACK,MAAT,CAAgBC,YAAhB,CAA6BC;AAF/B,GAAD,CAAR;AAID,CA5DM,C,CA+DP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAY;AACpCR,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,MAAM,CAACC,WAAP,CAAmBC,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,CAAxB;AACA,SAAO;AACLR,IAAAA,IAAI,EAAEV,WADD;AAELW,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CANM","sourcesContent":["import github from '../apis/github';\nimport {\n  GET_REPOSITORIES,\n  CLICK_SKILL,\n} from './types';\n//Example Action Creator\n//export const selectSong = (song) => {\n//    return {\n//        type: \"SONG_SELECTED\",\n//        payload: song,\n//    }\n//}\n    \nexport const getRepositories = () => async (dispatch, getStore) => {\n  const schema = `\n    query {\n      __schema {\n        types {\n          name\n          kind\n          description\n          fields {\n            name\n          }\n        }\n      }\n    }\n  `;\n\n  const individualObjIntrospection = `\n    query {\n      __type(name: \"Repository\") {\n        name\n        kind\n        description\n        fields {\n          name\n        }\n      }\n    }\n  `;\n\n  const query = \n  `query {\n    viewer {\n      repositories(first:50) {\n        nodes {\n          createdAt\n          description\n          name\n          updatedAt\n          repositoryTopics(first:50) {\n            nodes {\n              topic {\n                name\n              }\n            }\n          }\n          homepageUrl\n          url\n        }\n      }\n    }\n\n  }`\n\n  const response = await github(query);\n  console.log('response =', response);\n\n  dispatch({\n    type: GET_REPOSITORIES,\n    payload: response.viewer.repositories.nodes,\n  });\n}\n\n\n//Github Graph QL Repository \n// 0: {name: \"assignableUsers\"}\n// 1: {name: \"branchProtectionRules\"}\n// 2: {name: \"codeOfConduct\"}\n// 3: {name: \"collaborators\"}\n// 4: {name: \"commitComments\"}\n// 5: {name: \"contactLinks\"}\n// 6: {name: \"createdAt\"}\n// 7: {name: \"databaseId\"}\n// 8: {name: \"defaultBranchRef\"}\n// 9: {name: \"deleteBranchOnMerge\"}\n// 10: {name: \"deployKeys\"}\n// 11: {name: \"deployments\"}\n// 12: {name: \"description\"}\n// 13: {name: \"descriptionHTML\"}\n// 14: {name: \"diskUsage\"}\n// 15: {name: \"forkCount\"}\n// 16: {name: \"forks\"}\n// 17: {name: \"fundingLinks\"}\n// 18: {name: \"hasIssuesEnabled\"}\n// 19: {name: \"hasProjectsEnabled\"}\n// 20: {name: \"hasWikiEnabled\"}\n// 21: {name: \"homepageUrl\"}\n// 22: {name: \"id\"}\n// 23: {name: \"interactionAbility\"}\n// 24: {name: \"isArchived\"}\n// 25: {name: \"isBlankIssuesEnabled\"}\n// 26: {name: \"isDisabled\"}\n// 27: {name: \"isEmpty\"}\n// 28: {name: \"isFork\"}\n// 29: {name: \"isInOrganization\"}\n// 30: {name: \"isLocked\"}\n// 31: {name: \"isMirror\"}\n// 32: {name: \"isPrivate\"}\n// 33: {name: \"isSecurityPolicyEnabled\"}\n// 34: {name: \"isTemplate\"}\n// 35: {name: \"isUserConfigurationRepository\"}\n// 36: {name: \"issue\"}\n// 37: {name: \"issueOrPullRequest\"}\n// 38: {name: \"issueTemplates\"}\n// 39: {name: \"issues\"}\n// 40: {name: \"label\"}\n// 41: {name: \"labels\"}\n// 42: {name: \"languages\"}\n// 43: {name: \"latestRelease\"}\n// 44: {name: \"licenseInfo\"}\n// 45: {name: \"lockReason\"}\n// 46: {name: \"mentionableUsers\"}\n// 47: {name: \"mergeCommitAllowed\"}\n// 48: {name: \"milestone\"}\n// 49: {name: \"milestones\"}\n// 50: {name: \"mirrorUrl\"}\n// 51: {name: \"name\"}\n// 52: {name: \"nameWithOwner\"}\n// 53: {name: \"object\"}\n// 54: {name: \"openGraphImageUrl\"}\n// 55: {name: \"owner\"}\n// 56: {name: \"packages\"}\n// 57: {name: \"parent\"}\n// 58: {name: \"pinnedIssues\"}\n// 59: {name: \"primaryLanguage\"}\n// 60: {name: \"project\"}\n// 61: {name: \"projects\"}\n// 62: {name: \"projectsResourcePath\"}\n// 63: {name: \"projectsUrl\"}\n// 64: {name: \"pullRequest\"}\n// 65: {name: \"pullRequests\"}\n// 66: {name: \"pushedAt\"}\n// 67: {name: \"rebaseMergeAllowed\"}\n// 68: {name: \"ref\"}\n// 69: {name: \"refs\"}\n// 70: {name: \"release\"}\n// 71: {name: \"releases\"}\n// 72: {name: \"repositoryTopics\"}\n// 73: {name: \"resourcePath\"}\n// 74: {name: \"securityPolicyUrl\"}\n// 75: {name: \"shortDescriptionHTML\"}\n// 76: {name: \"squashMergeAllowed\"}\n// 77: {name: \"sshUrl\"}\n// 78: {name: \"stargazerCount\"}\n// 79: {name: \"stargazers\"}\n// 80: {name: \"submodules\"}\n// 81: {name: \"tempCloneToken\"}\n// 82: {name: \"templateRepository\"}\n// 83: {name: \"updatedAt\"}\n// 84: {name: \"url\"}\n// 85: {name: \"usesCustomOpenGraphImage\"}\n// 86: {name: \"viewerCanAdminister\"}\n// 87: {name: \"viewerCanCreateProjects\"}\n// 88: {name: \"viewerCanSubscribe\"}\n// 89: {name: \"viewerCanUpdateTopics\"}\n// 90: {name: \"viewerDefaultCommitEmail\"}\n// 91: {name: \"viewerDefaultMergeMethod\"}\n// 92: {name: \"viewerHasStarred\"}\n// 93: {name: \"viewerPermission\"}\n// 94: {name: \"viewerPossibleCommitEmails\"}\n// 95: {name: \"viewerSubscription\"}\n// 96: {name: \"vulnerabilityAlerts\"}\n// 97: {name: \"watchers\"}\n\nexport const clickSkill = (target) => {\n  console.log('target =', target.textContent.replace(':', ''));\n  return {\n    type: CLICK_SKILL,\n    payload: target\n  }\n}"]},"metadata":{},"sourceType":"module"}