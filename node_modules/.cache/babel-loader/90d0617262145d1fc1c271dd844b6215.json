{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/pages/examples/Bridge/Bridge.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bridge = () => {\n  _s();\n\n  useEffect(() => {\n    debugger;\n    document.documentElement.style.setProperty('--bodyBac', 'newValue');\n    document.body.style.background = `\n      linear-gradient(to right, rgba($color-primary-1, 1), rgba($color-primary-1, 1));\n    `;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bridge\",\n    children: \"Bridge page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bridge, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Bridge;\nexport default Bridge; // -bridge page sections:\n//   1. history/background \n//       -have explanation of what bridge is\n//       -talk about why I decided to create a multiplayer bridge website in the first place;  mention the timing and how I had just completed the c# projects and was re-considering my career choices when Andrew mentioned how cool he thought it would be to play bridge online with his parents and me.\n//   2. Initial Approach to learning web development( talk about my lack of any real web experience and how I started by studying the odin project curriculum but soon realized I wouldn't be able to create a bridge website any time soon following that curriculum.  The bridge app was really the motivation to find a Udemy course that would serve as the foundation of my web development understanding, especially in regards to real-time multiplayer web apps. After completing the web dev bootcamp course (add link) i immediately started coding in Paper.JS (paper.JS was the library that Colt STeele used in his course, so I figured that would be a good library to use for the playing phase;  I didn't stop to consider that there may be better alternative as I was eager to get a working prototype asap) to figure out how to draw cards using Paper.JS.  Unfortunately, (or fortunately depending on your perspective) I didn't realize that paper.JS has built-in raster image support, essentially rendering the 3-4 weeks I spent figuring out how to draw the 52 cards in a deck, irrelevant.\n//   3.  Challenges \n//         -paper.JS and socket.io: figuring out how to get socket.io events to trigger changed inside paper.JS);  solved by reading the documentation and not assuming that you know something\n//         -claim some feature: how to get an easy to understand ui and simple experience\n//   4.  Solutions\n//   4.  What I'd do differently\n\nvar _c;\n\n$RefreshReg$(_c, \"Bridge\");","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/pages/examples/Bridge/Bridge.js"],"names":["React","useEffect","Bridge","document","documentElement","style","setProperty","body","background"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnBD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,WAA/B,CAA2C,WAA3C,EAAwD,UAAxD;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAcF,KAAd,CAAoBG,UAApB,GAAkC;AACtC;AACA,KAFI;AAID,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMN,M;;KAAAA,M;AAiBN,eAAeA,MAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\n\nconst Bridge = () => {\n  useEffect(() => {\n    debugger;\n    document.documentElement.style.setProperty('--bodyBac', 'newValue');\n    document.body.style.background = `\n      linear-gradient(to right, rgba($color-primary-1, 1), rgba($color-primary-1, 1));\n    `\n\n  }, []);\n\n  return (\n    <div className=\"bridge\">\n      Bridge page\n    </div>\n  ) \n}\n\nexport default Bridge;\n\n\n// -bridge page sections:\n//   1. history/background \n//       -have explanation of what bridge is\n//       -talk about why I decided to create a multiplayer bridge website in the first place;  mention the timing and how I had just completed the c# projects and was re-considering my career choices when Andrew mentioned how cool he thought it would be to play bridge online with his parents and me.\n//   2. Initial Approach to learning web development( talk about my lack of any real web experience and how I started by studying the odin project curriculum but soon realized I wouldn't be able to create a bridge website any time soon following that curriculum.  The bridge app was really the motivation to find a Udemy course that would serve as the foundation of my web development understanding, especially in regards to real-time multiplayer web apps. After completing the web dev bootcamp course (add link) i immediately started coding in Paper.JS (paper.JS was the library that Colt STeele used in his course, so I figured that would be a good library to use for the playing phase;  I didn't stop to consider that there may be better alternative as I was eager to get a working prototype asap) to figure out how to draw cards using Paper.JS.  Unfortunately, (or fortunately depending on your perspective) I didn't realize that paper.JS has built-in raster image support, essentially rendering the 3-4 weeks I spent figuring out how to draw the 52 cards in a deck, irrelevant.\n//   3.  Challenges \n//         -paper.JS and socket.io: figuring out how to get socket.io events to trigger changed inside paper.JS);  solved by reading the documentation and not assuming that you know something\n//         -claim some feature: how to get an easy to understand ui and simple experience\n//   4.  Solutions\n//   4.  What I'd do differently"]},"metadata":{},"sourceType":"module"}