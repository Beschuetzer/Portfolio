{"ast":null,"code":"import { SET_IS_ANIMATING, GET_REPOSITORIES, SET_IS_MOBILE, SET_PREVIOUS_URL, SET_SCROLL_PERCENT } from '../actions/types';\nconst INITIAL_STATE = {\n  isMobile: null,\n  isAnimating: false,\n  repos: [],\n  previousUrl: null,\n  scrollPercent: \"0%\",\n  mobileBreakPointWidth: null\n};\n\nconst generalReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_IS_MOBILE:\n      console.log('payloa =', payloa);\n      return { ...state,\n        isMobile: action.payload['isMobile'],\n        mobileBreakPointWidth: action.payload['mobileBreakPointWidth']\n      };\n\n    case SET_IS_ANIMATING:\n      return { ...state,\n        isAnimating: action.payload\n      };\n\n    case GET_REPOSITORIES:\n      return { ...state,\n        repos: action.payload\n      };\n\n    case SET_PREVIOUS_URL:\n      return { ...state,\n        previousUrl: action.payload\n      };\n\n    case SET_SCROLL_PERCENT:\n      return { ...state,\n        scrollPercent: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default generalReducer;","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/reducers/generalReducer.js"],"names":["SET_IS_ANIMATING","GET_REPOSITORIES","SET_IS_MOBILE","SET_PREVIOUS_URL","SET_SCROLL_PERCENT","INITIAL_STATE","isMobile","isAnimating","repos","previousUrl","scrollPercent","mobileBreakPointWidth","generalReducer","state","action","type","console","log","payloa","payload"],"mappings":"AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,gBAJF,EAKEC,kBALF,QAMO,kBANP;AAQA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,IADU;AAEpBC,EAAAA,WAAW,EAAE,KAFO;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,WAAW,EAAE,IAJO;AAKpBC,EAAAA,aAAa,EAAE,IALK;AAMpBC,EAAAA,qBAAqB,EAAE;AANH,CAAtB;;AASA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,aAAL;AACEc,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,MAAxB;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAWP,QAAAA,QAAQ,EAAEQ,MAAM,CAACK,OAAP,CAAe,UAAf,CAArB;AAAiDR,QAAAA,qBAAqB,EAAEG,MAAM,CAACK,OAAP,CAAe,uBAAf;AAAxE,OAAP;;AACF,SAAKnB,gBAAL;AACE,aAAO,EAAC,GAAGa,KAAJ;AAAWN,QAAAA,WAAW,EAAEO,MAAM,CAACK;AAA/B,OAAP;;AACF,SAAKlB,gBAAL;AACE,aAAO,EAAC,GAAGY,KAAJ;AAAWL,QAAAA,KAAK,EAAEM,MAAM,CAACK;AAAzB,OAAP;;AACF,SAAKhB,gBAAL;AACE,aAAO,EAAC,GAAGU,KAAJ;AAAWJ,QAAAA,WAAW,EAAEK,MAAM,CAACK;AAA/B,OAAP;;AACF,SAAKf,kBAAL;AACE,aAAO,EAAC,GAAGS,KAAJ;AAAWH,QAAAA,aAAa,EAAEI,MAAM,CAACK;AAAjC,OAAP;;AACF;AACE,aAAON,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,cAAf","sourcesContent":["import { \n  SET_IS_ANIMATING,\n  GET_REPOSITORIES,\n  SET_IS_MOBILE,\n  SET_PREVIOUS_URL,\n  SET_SCROLL_PERCENT,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  isMobile: null,\n  isAnimating: false,\n  repos: [],\n  previousUrl: null,\n  scrollPercent: \"0%\",\n  mobileBreakPointWidth: null,\n}\n\nconst generalReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_IS_MOBILE:\n      console.log('payloa =', payloa);\n      return {...state, isMobile: action.payload['isMobile'], mobileBreakPointWidth: action.payload['mobileBreakPointWidth']};  \n    case SET_IS_ANIMATING:\n      return {...state, isAnimating: action.payload};  \n    case GET_REPOSITORIES:\n      return {...state, repos: action.payload};  \n    case SET_PREVIOUS_URL:\n      return {...state, previousUrl: action.payload};  \n    case SET_SCROLL_PERCENT:\n      return {...state, scrollPercent: action.payload}; \n    default:\n      return state;\n  }\n}\n\nexport default generalReducer;"]},"metadata":{},"sourceType":"module"}