{"ast":null,"code":"var _jsxFileName = \"/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/navbar/PageNav.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setPreviousUrl } from '../../actions';\nimport { capitalize } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PageNav extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSections = () => {\n      var _this$props$match;\n\n      const {\n        previousUrl\n      } = this.props;\n      const currentUrl = (_this$props$match = this.props.match) === null || _this$props$match === void 0 ? void 0 : _this$props$match.url;\n      if (pre) if (previousUrl === currentUrl) return;\n      if (!previousUrl || previousUrl !== currentUrl) this.props.setPreviousUrl(currentUrl);\n      let sectionNames = [];\n      const sections = document.querySelectorAll('[data-section]');\n      debugger;\n\n      for (let i = 0; i < sections.length; i++) {\n        const section = sections[i];\n        const capitalized = capitalize(section.dataset.section); // debugger\n\n        sectionNames.push(capitalized === null || capitalized === void 0 ? void 0 : capitalized.replace('-', ' '));\n      }\n\n      return sectionNames.map((sectionName, index, array) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${PageNav.cssClass}__section ${PageNav.cssClass}__section-${sectionName}`,\n          children: [sectionName, index < array.length - 1 ? '/' : null]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$match2;\n\n    const {\n      previousUrl\n    } = this.props;\n    const currentUrl = (_this$props$match2 = this.props.match) === null || _this$props$match2 === void 0 ? void 0 : _this$props$match2.url;\n    console.log('previousUrl =', previousUrl);\n  }\n\n  render() {\n    return /*#__PURE__*/ReactDOM.createPortal(\n    /*#__PURE__*/\n    //The idea behind this component is to have a nav element that has quick links  to the sections of each page\n    _jsxDEV(\"div\", {\n      className: PageNav.cssClass,\n      children: this.renderSections()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), document.querySelector('.header__inner'));\n  }\n\n}\n\nPageNav.cssClass = 'page-nav';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousUrl: state.general.previousUrl\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPreviousUrl\n})(PageNav);","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/components/navbar/PageNav.js"],"names":["React","ReactDOM","connect","Link","setPreviousUrl","capitalize","PageNav","Component","renderSections","previousUrl","props","currentUrl","match","url","pre","sectionNames","sections","document","querySelectorAll","i","length","section","capitalized","dataset","push","replace","map","sectionName","index","array","cssClass","componentDidMount","console","log","render","createPortal","querySelector","mapStateToProps","state","ownProps","general"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAUpCC,cAVoC,GAUnB,MAAM;AAAA;;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACA,YAAMC,UAAU,wBAAG,KAAKD,KAAL,CAAWE,KAAd,sDAAG,kBAAkBC,GAArC;AAEA,UAAIC,GAAJ,EAEA,IAAIL,WAAW,KAAKE,UAApB,EAAgC;AAEhC,UAAI,CAACF,WAAD,IAAgBA,WAAW,KAAKE,UAApC,EAAgD,KAAKD,KAAL,CAAWN,cAAX,CAA0BO,UAA1B;AAEhD,UAAII,YAAY,GAAG,EAAnB;AACA,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,CAAjB;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,cAAME,OAAO,GAAGL,QAAQ,CAACG,CAAD,CAAxB;AACA,cAAMG,WAAW,GAAGjB,UAAU,CAACgB,OAAO,CAACE,OAAR,CAAgBF,OAAjB,CAA9B,CAFwC,CAGxC;;AACAN,QAAAA,YAAY,CAACS,IAAb,CAAkBF,WAAlB,aAAkBA,WAAlB,uBAAkBA,WAAW,CAAEG,OAAb,CAAqB,GAArB,EAA0B,GAA1B,CAAlB;AACD;;AAED,aAAOV,YAAY,CAACW,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,EAAqBC,KAArB,KAA+B;AACrD,4BACE;AAAkB,UAAA,SAAS,EAAG,GAAEvB,OAAO,CAACwB,QAAS,aAAYxB,OAAO,CAACwB,QAAS,aAAYH,WAAY,EAAtG;AAAA,qBACGA,WADH,EAEGC,KAAK,GAAIC,KAAK,CAACT,MAAN,GAAe,CAAxB,GACC,GADD,GAGC,IALJ;AAAA,WAAWQ,KAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXM,CAAP;AAYD,KA1CmC;AAAA;;AAGpCG,EAAAA,iBAAiB,GAAI;AAAA;;AACnB,UAAM;AAAEtB,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AACA,UAAMC,UAAU,yBAAG,KAAKD,KAAL,CAAWE,KAAd,uDAAG,mBAAkBC,GAArC;AAEAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BxB,WAA7B;AACD;;AAoCDyB,EAAAA,MAAM,GAAG;AACP,wBACEjC,QAAQ,CAACkC,YAAT;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAACwB,QAAxB;AAAA,gBACG,KAAKtB,cAAL;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAMES,QAAQ,CAACmB,aAAT,CAAuB,gBAAvB,CANF,CADF;AAUD;;AAvDmC;;AAAhC9B,O,CACGwB,Q,GAAW,U;;AAyDpB,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACL9B,IAAAA,WAAW,EAAE6B,KAAK,CAACE,OAAN,CAAc/B;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACmC,eAAD,EAAkB;AACtCjC,EAAAA;AADsC,CAAlB,CAAP,CAEZE,OAFY,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { setPreviousUrl } from '../../actions';\nimport { capitalize } from '../../helpers';\n\nclass PageNav extends React.Component {\n  static cssClass = 'page-nav';\n\n  componentDidMount () {\n    const { previousUrl } = this.props;\n    const currentUrl = this.props.match?.url;\n    \n    console.log('previousUrl =', previousUrl);\n  }\n\n  renderSections = () => {\n    const { previousUrl } = this.props;\n    const currentUrl = this.props.match?.url;\n\n    if (pre)\n\n    if (previousUrl === currentUrl) return;\n\n    if (!previousUrl || previousUrl !== currentUrl) this.props.setPreviousUrl(currentUrl);\n\n    let sectionNames = [];\n    const sections = document.querySelectorAll('[data-section]');\n    debugger\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const capitalized = capitalize(section.dataset.section);\n      // debugger\n      sectionNames.push(capitalized?.replace('-', ' '))\n    }\n    \n    return sectionNames.map((sectionName, index, array) => {\n      return (\n        <span key={index} className={`${PageNav.cssClass}__section ${PageNav.cssClass}__section-${sectionName}`}>\n          {sectionName}\n          {index < (array.length - 1) ?\n            '/'  \n          : \n            null\n          }\n        </span>\n      );\n    });\n  }\n\n  render() {\n    return (\n      ReactDOM.createPortal(\n        //The idea behind this component is to have a nav element that has quick links  to the sections of each page\n        <div className={PageNav.cssClass}>\n          {this.renderSections()}\n        </div>\n      ,\n        document.querySelector('.header__inner')\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { \n    previousUrl: state.general.previousUrl\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setPreviousUrl,\n})(PageNav);"]},"metadata":{},"sourceType":"module"}