{"ast":null,"code":"export function capitalize(str) {\n  return str.split(\" \").map(word => word[0].toUpperCase() + word.slice(1)).join(\" \");\n}\nexport function checkForParentOfType(element, parentType, classPresent = '') {\n  deb;\n\n  try {\n    if (element.parentNode.localName === parentType && element.parentNode.className.match(classPresent)) return true;\n    if (element.parentNode.localName.match(/html/i)) return false;\n    const parent = element.parentNode;\n    return checkForParentOfType(parent, parentType, classPresent);\n  } catch (error) {\n    console.log('error =', error);\n    return false;\n  }\n}","map":{"version":3,"sources":["/home/adam/github/WebDevelopmentStuff/portfolio_site/src/helpers/index.js"],"names":["capitalize","str","split","map","word","toUpperCase","slice","join","checkForParentOfType","element","parentType","classPresent","deb","parentNode","localName","className","match","parent","error","console","log"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAOA,GAAG,CAACC,KAAJ,CAAU,GAAV,EACFC,GADE,CACGC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,KAAwBD,IAAI,CAACE,KAAL,CAAW,CAAX,CADpC,EAEFC,IAFE,CAEG,GAFH,CAAP;AAGD;AAED,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAuCC,UAAvC,EAAmDC,YAAY,GAAC,EAAhE,EAAoE;AACzEC,EAAAA,GAAG;;AACH,MAAI;AACA,QAAIH,OAAO,CAACI,UAAR,CAAmBC,SAAnB,KAAiCJ,UAAjC,IAA+CD,OAAO,CAACI,UAAR,CAAmBE,SAAnB,CAA6BC,KAA7B,CAAmCL,YAAnC,CAAnD,EAAqG,OAAO,IAAP;AACrG,QAAIF,OAAO,CAACI,UAAR,CAAmBC,SAAnB,CAA6BE,KAA7B,CAAmC,OAAnC,CAAJ,EAAiD,OAAO,KAAP;AACjD,UAAMC,MAAM,GAAGR,OAAO,CAACI,UAAvB;AACA,WAAOL,oBAAoB,CAACS,MAAD,EAASP,UAAT,EAAqBC,YAArB,CAA3B;AACH,GALD,CAMA,OAAOO,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,WAAO,KAAP;AACH;AACF","sourcesContent":["export function capitalize(str) {\n  return str.split(\" \")\n      .map((word) => word[0].toUpperCase() + word.slice(1))\n      .join(\" \");\n}\n\nexport function checkForParentOfType(element, parentType, classPresent='') {\n  deb\n  try {\n      if (element.parentNode.localName === parentType && element.parentNode.className.match(classPresent)) return true;\n      if (element.parentNode.localName.match(/html/i)) return false;\n      const parent = element.parentNode;\n      return checkForParentOfType(parent, parentType, classPresent);\n  }\n  catch (error) {\n      console.log('error =', error);\n      return false;\n  }\n}"]},"metadata":{},"sourceType":"module"}